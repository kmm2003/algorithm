// 설명의 편의를 위해 아래에서 시,분,초를 H,M,S 로 표현하겠다.

let main=()=>{
    let N=prompt('');
    let count=0;
    if(N<13){ // N이 13미만이면 H에 3이 들어가는 경우의 횟수는 1개
        count=(N)*1575+1*3600; // (H에 3이 안들어가는 경우 횟수)*1575 + (H에 3이 들어가는 경우 횟수)*3600 , 이하 동일
    }
    else if(N<23){ // N이 23미만이면 ... 2개
        count=(N-1)*1575+2*3600;
    }
    else{ // N이 23이상이면 ... 3개
        count=(N-2)*1575+3*3600;
    }
    console.log(count);
}

main();

/*
이번 문제의 핵심은 구현을 위한 알고리즘 및 수학 연산이 핵심이였다.

시,분,초 중에 (큰 단위 -> 작은 단위) 순서로 3이 들어갈 경우를 생각해줘야하는데
즉, 첫번째로는 H를 기준으로 생각해야한다.

H의 경우 3이 들어가는 경우가 3,13,23 밖에 없기 때문에 3가지를 기준점으로 나눠서 연산을 해야한다.
나눠야하는 이유는 3,13,23일 떄 각각 H에 3이 들어가는 경우의 횟수가 각자 다르기 때문이다. (3,13,23 ==> 각각 1,2,3 회)

H에 3이 들어가는 경우는 분,초에 들어갈 수 있는 모든 경우의 수인 3600가지가 카운팅된다. (분,초 각각 10의 자리는 0~5 즉, 6자리 ,, 1의 자리는 0~9 즉, 10자리이다.) 6*10*6*10 == 3600

H에 3이 들어가지 않는 경우는 분,초에 3이 무조건 하나는 들어가는 경우의 수를 구해줘야하는데
아래와 같이 경우의 수를 나누어서 모두 더해주면 구할 수 있다.(확통문제푸는 방식이랑 같다)

* 아래에서 설명하는 4자리는 분,초를 의미한다.
i) 4자리중 1자리만 3일 경우 ==> (9*5*9)+(5*5*9)+(5*9*9)+(5*9*5) ==> 1260가지
ii) 4자리중 2자리가 3일 경우 ==> 5*9+9*9+9*5+5*9+5*5+5*9 ==> 286가지
iii) 4자리중 3자리가 3일 경우 ==> 5+9+5+9 ==> 28가지
iiii) 4자리 모두 3일 경우 ==> 1가지

즉, 위 4가지 경우를 모두 더하면 1575가지이다.

결론적으로
1. H에 3이 들어가는 경우 ==> 3600가지
2. H에 3이 들어가지 않는 경우 ==> 1575가지

위 가지수를 이용해 처음에 나눈 기준대로 연산을 적용하면...

구현완료!!
*/
